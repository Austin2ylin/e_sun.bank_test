{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"post-list\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Posts\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"發布帖子\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.posts, post => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: post.id\n    }, _toDisplayString(post.content), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", null, [_createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.addPost && $options.addPost(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newPostContent = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newPostContent]]), _hoisted_3], 32 /* NEED_HYDRATION */)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","type","_createElementBlock","_Fragment","_hoisted_1","_hoisted_2","_renderList","$data","posts","post","key","id","content","onSubmit","_cache","_withModifiers","args","$options","addPost","$event","newPostContent","_hoisted_3"],"sources":["/Users/austin/my-social-media-app/src/components/PostList.vue"],"sourcesContent":["<template>\n    <div class=\"post-list\">\n      <h1>Posts</h1>\n      <ul>\n        <li v-for=\"post in posts\" :key=\"post.id\">{{ post.content }}</li>\n      </ul>\n    </div>\n\n    <div>\n    <form @submit.prevent=\"addPost\">\n      <textarea v-model=\"newPostContent\"></textarea>\n      <button type=\"submit\">發布帖子</button>\n    </form>\n    </div>\n\n  </template>\n\n  <script>\n  import axios from 'axios';\n  export default {\n    data() {\n      return {\n        posts: [],\n        newPostContent: ''\n      };\n    },\n    methods: {\n        addPost() {\n            axios.post('/api/posts', { content: this.newPostContent })\n            .then(() => {\n                this.newPostContent = ''; // 清空文本區\n                this.fetchPosts(); // 重新加載帖子\n            })\n            .catch(error => {\n                console.error(error.response.data.message);\n            });\n        },\n        fetchPosts() {\n            axios.get('/api/posts')\n            .then(response => {\n                this.posts = response.data;\n            })\n            .catch(error => {\n                console.error(error.response.data.message);\n            });\n        },\n    },\n};\n</script>"],"mappings":";;EACSA,KAAK,EAAC;AAAW;gCACpBC,mBAAA,CAAc,YAAV,OAAK;gCASTA,mBAAA,CAAmC;EAA3BC,IAAI,EAAC;AAAQ,GAAC,MAAI;;uBAXhCC,mBAAA,CAAAC,SAAA,SACIH,mBAAA,CAKM,OALNI,UAKM,GAJJC,UAAc,EACdL,mBAAA,CAEK,c,kBADHE,mBAAA,CAAgEC,SAAA,QAJxEG,WAAA,CAI2BC,KAAA,CAAAC,KAAK,EAAbC,IAAI;yBAAfP,mBAAA,CAAgE;MAArCQ,GAAG,EAAED,IAAI,CAACE;wBAAOF,IAAI,CAACG,OAAO;sCAI5DZ,mBAAA,CAKM,cAJNA,mBAAA,CAGO;IAHAa,QAAM,EAAAC,MAAA,QAAAA,MAAA,MATjBC,cAAA,KAAAC,IAAA,KAS2BC,QAAA,CAAAC,OAAA,IAAAD,QAAA,CAAAC,OAAA,IAAAF,IAAA,CAAO;sBAC5BhB,mBAAA,CAA8C;IAVpD,uBAAAc,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAUyBZ,KAAA,CAAAa,cAAc,GAAAD,MAAA;iDAAdZ,KAAA,CAAAa,cAAc,E,GACjCC,UAAmC,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}